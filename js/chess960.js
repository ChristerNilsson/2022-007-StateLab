// Generated by CoffeeScript 2.5.1
// Givet ID r√§knar chess960 ut konfigurationen.
// <= 0 ID < 960
// 518 motsvarar normalt schack, dvs RNBQKBNR

// https://chess-tigers.de/download/chess960_regeln.pdf?PHPSESSID=d71dfe17e7e8aae16adce6f8fb284410
var B, B0, B1, N, N0, N1, Q, X, fillIn, getEmpty;

[Q, N, B, X] = 'QNB_';

N0 = [0, 0, 0, 0, 1, 1, 1, 2, 2, 3];

N1 = [1, 2, 3, 4, 2, 3, 4, 3, 4, 4];

B0 = [0, 2, 4, 6];

B1 = [1, 3, 5, 7];

getEmpty = function(arr) {
  arr = _.map(arr, function(value, index) {
    if (value === X) {
      return index;
    } else {
      return X;
    }
  });
  return _.filter(arr, function(value) {
    return value !== X;
  });
};

assert([0, 1, 3], getEmpty([X, X, N, X, N]));

fillIn = function(piece, places, pieces) {
  var empty, i, j, k, len, len1, place, ref, res;
  res = new Array(places.length + pieces.length);
  _.fill(res, X);
  for (j = 0, len = places.length; j < len; j++) {
    place = places[j];
    res[place] = piece;
  }
  empty = getEmpty(res);
  ref = _.range(pieces.length);
  for (k = 0, len1 = ref.length; k < len1; k++) {
    i = ref[k];
    res[empty[i]] = pieces[i];
  }
  return res.join('');
};

assert('RNKNR', fillIn(N, [1, 3], 'RKR'));

assert('RNQKNR', fillIn(Q, [2], 'RNKNR'));

assert('RNBQKBNR', fillIn(B, [2, 5], 'RNQKNR'));

export var chess960 = function(i) { // 16 microsecs
  var b0, b1, five, n0, n1, q, six;
  q = Math.floor(i / 16) % 6;
  n0 = N0[Math.floor(i / 96) % 10];
  n1 = N1[Math.floor(i / 96) % 10];
  b0 = B0[Math.floor(i / 4) % 4];
  b1 = B1[i % 4];
  five = fillIn(N, [n0, n1], 'RKR');
  six = fillIn(Q, [q], five);
  return fillIn(B, [b0, b1], six);
};

assert("RNBQKBNR", chess960(518));

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hlc3M5NjAuanMiLCJzb3VyY2VSb290IjoiLi4iLCJzb3VyY2VzIjpbImNvZmZlZVxcY2hlc3M5NjAuY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFJaUc7Ozs7O0FBQUEsSUFBQSxDQUFBLEVBQUEsRUFBQSxFQUFBLEVBQUEsRUFBQSxDQUFBLEVBQUEsRUFBQSxFQUFBLEVBQUEsRUFBQSxDQUFBLEVBQUEsQ0FBQSxFQUFBLE1BQUEsRUFBQTs7QUFFakcsQ0FBQyxDQUFELEVBQUcsQ0FBSCxFQUFLLENBQUwsRUFBTyxDQUFQLENBQUEsR0FBWTs7QUFFWixFQUFBLEdBQUssQ0FBQyxDQUFELEVBQUcsQ0FBSCxFQUFLLENBQUwsRUFBTyxDQUFQLEVBQVMsQ0FBVCxFQUFXLENBQVgsRUFBYSxDQUFiLEVBQWUsQ0FBZixFQUFpQixDQUFqQixFQUFtQixDQUFuQjs7QUFDTCxFQUFBLEdBQUssQ0FBQyxDQUFELEVBQUcsQ0FBSCxFQUFLLENBQUwsRUFBTyxDQUFQLEVBQVMsQ0FBVCxFQUFXLENBQVgsRUFBYSxDQUFiLEVBQWUsQ0FBZixFQUFpQixDQUFqQixFQUFtQixDQUFuQjs7QUFDTCxFQUFBLEdBQUssQ0FBQyxDQUFELEVBQUcsQ0FBSCxFQUFLLENBQUwsRUFBTyxDQUFQOztBQUNMLEVBQUEsR0FBSyxDQUFDLENBQUQsRUFBRyxDQUFILEVBQUssQ0FBTCxFQUFPLENBQVA7O0FBRUwsUUFBQSxHQUFXLFFBQUEsQ0FBQyxHQUFELENBQUE7RUFDVixHQUFBLEdBQU0sQ0FBQyxDQUFDLEdBQUYsQ0FBTSxHQUFOLEVBQVcsUUFBQSxDQUFDLEtBQUQsRUFBTyxLQUFQLENBQUE7SUFBaUIsSUFBRyxLQUFBLEtBQU8sQ0FBVjthQUFpQixNQUFqQjtLQUFBLE1BQUE7YUFBNEIsRUFBNUI7O0VBQWpCLENBQVg7U0FDTixDQUFDLENBQUMsTUFBRixDQUFTLEdBQVQsRUFBYyxRQUFBLENBQUMsS0FBRCxDQUFBO1dBQVcsS0FBQSxLQUFTO0VBQXBCLENBQWQ7QUFGVTs7QUFHWCxNQUFBLENBQU8sQ0FBQyxDQUFELEVBQUcsQ0FBSCxFQUFLLENBQUwsQ0FBUCxFQUFnQixRQUFBLENBQVMsQ0FBQyxDQUFELEVBQUcsQ0FBSCxFQUFLLENBQUwsRUFBTyxDQUFQLEVBQVMsQ0FBVCxDQUFULENBQWhCOztBQUVBLE1BQUEsR0FBUyxRQUFBLENBQUMsS0FBRCxFQUFPLE1BQVAsRUFBYyxNQUFkLENBQUE7QUFDVCxNQUFBLEtBQUEsRUFBQSxDQUFBLEVBQUEsQ0FBQSxFQUFBLENBQUEsRUFBQSxHQUFBLEVBQUEsSUFBQSxFQUFBLEtBQUEsRUFBQSxHQUFBLEVBQUE7RUFBQyxHQUFBLEdBQU0sSUFBSSxLQUFKLENBQVUsTUFBTSxDQUFDLE1BQVAsR0FBZ0IsTUFBTSxDQUFDLE1BQWpDO0VBQ04sQ0FBQyxDQUFDLElBQUYsQ0FBTyxHQUFQLEVBQVcsQ0FBWDtFQUNBLEtBQUEsd0NBQUE7O0lBQUEsR0FBRyxDQUFDLEtBQUQsQ0FBSCxHQUFhO0VBQWI7RUFDQSxLQUFBLEdBQVEsUUFBQSxDQUFTLEdBQVQ7QUFDUjtFQUFBLEtBQUEsdUNBQUE7O0lBQUEsR0FBRyxDQUFDLEtBQUssQ0FBQyxDQUFELENBQU4sQ0FBSCxHQUFnQixNQUFNLENBQUMsQ0FBRDtFQUF0QjtTQUNBLEdBQUcsQ0FBQyxJQUFKLENBQVMsRUFBVDtBQU5ROztBQU9ULE1BQUEsQ0FBVSxPQUFWLEVBQW1CLE1BQUEsQ0FBTyxDQUFQLEVBQVUsQ0FBQyxDQUFELEVBQUcsQ0FBSCxDQUFWLEVBQWlCLEtBQWpCLENBQW5COztBQUNBLE1BQUEsQ0FBUyxRQUFULEVBQW1CLE1BQUEsQ0FBTyxDQUFQLEVBQVUsQ0FBQyxDQUFELENBQVYsRUFBaUIsT0FBakIsQ0FBbkI7O0FBQ0EsTUFBQSxDQUFPLFVBQVAsRUFBbUIsTUFBQSxDQUFPLENBQVAsRUFBVSxDQUFDLENBQUQsRUFBRyxDQUFILENBQVYsRUFBaUIsUUFBakIsQ0FBbkI7O0FBRUEsT0FBQSxJQUFPLFFBQUEsR0FBVyxRQUFBLENBQUMsQ0FBRCxDQUFBLEVBQUE7QUFDbEIsTUFBQSxFQUFBLEVBQUEsRUFBQSxFQUFBLElBQUEsRUFBQSxFQUFBLEVBQUEsRUFBQSxFQUFBLENBQUEsRUFBQTtFQUFDLENBQUEsY0FBSyxJQUFLLEdBQUwsR0FBVTtFQUNmLEVBQUEsR0FBSyxFQUFFLFlBQUMsSUFBSyxHQUFMLEdBQVUsRUFBWDtFQUNQLEVBQUEsR0FBSyxFQUFFLFlBQUMsSUFBSyxHQUFMLEdBQVUsRUFBWDtFQUNQLEVBQUEsR0FBSyxFQUFFLFlBQUMsSUFBSyxFQUFMLEdBQVMsQ0FBVjtFQUNQLEVBQUEsR0FBSyxFQUFFLENBQUMsQ0FBQSxHQUFJLENBQUw7RUFDUCxJQUFBLEdBQVEsTUFBQSxDQUFPLENBQVAsRUFBUyxDQUFDLEVBQUQsRUFBSSxFQUFKLENBQVQsRUFBaUIsS0FBakI7RUFDUixHQUFBLEdBQVEsTUFBQSxDQUFPLENBQVAsRUFBUyxDQUFDLENBQUQsQ0FBVCxFQUFhLElBQWI7U0FDUixNQUFBLENBQU8sQ0FBUCxFQUFTLENBQUMsRUFBRCxFQUFJLEVBQUosQ0FBVCxFQUFpQixHQUFqQjtBQVJpQjs7QUFTbEIsTUFBQSxDQUFPLFVBQVAsRUFBbUIsUUFBQSxDQUFTLEdBQVQsQ0FBbkIiLCJzb3VyY2VzQ29udGVudCI6WyIjIEdpdmV0IElEIHLDpGtuYXIgY2hlc3M5NjAgdXQga29uZmlndXJhdGlvbmVuLlxyXG4jIDw9IDAgSUQgPCA5NjBcclxuIyA1MTggbW90c3ZhcmFyIG5vcm1hbHQgc2NoYWNrLCBkdnMgUk5CUUtCTlJcclxuXHJcbiMgaHR0cHM6Ly9jaGVzcy10aWdlcnMuZGUvZG93bmxvYWQvY2hlc3M5NjBfcmVnZWxuLnBkZj9QSFBTRVNTSUQ9ZDcxZGZlMTdlN2U4YWFlMTZhZGNlNmY4ZmIyODQ0MTBcclxuXHJcbltRLE4sQixYXSA9ICdRTkJfJ1xyXG5cclxuTjAgPSBbMCwwLDAsMCwxLDEsMSwyLDIsM11cclxuTjEgPSBbMSwyLDMsNCwyLDMsNCwzLDQsNF1cclxuQjAgPSBbMCwyLDQsNl1cclxuQjEgPSBbMSwzLDUsN11cclxuXHJcbmdldEVtcHR5ID0gKGFycikgLT5cclxuXHRhcnIgPSBfLm1hcCBhcnIsICh2YWx1ZSxpbmRleCkgLT4gaWYgdmFsdWU9PVggdGhlbiBpbmRleCBlbHNlIFhcclxuXHRfLmZpbHRlciBhcnIsICh2YWx1ZSkgLT4gdmFsdWUgIT0gWFxyXG5hc3NlcnQgWzAsMSwzXSwgZ2V0RW1wdHkgW1gsWCxOLFgsTl1cclxuXHJcbmZpbGxJbiA9IChwaWVjZSxwbGFjZXMscGllY2VzKSAtPlxyXG5cdHJlcyA9IG5ldyBBcnJheSBwbGFjZXMubGVuZ3RoICsgcGllY2VzLmxlbmd0aFxyXG5cdF8uZmlsbCByZXMsWFxyXG5cdHJlc1twbGFjZV0gPSBwaWVjZSBmb3IgcGxhY2UgaW4gcGxhY2VzXHJcblx0ZW1wdHkgPSBnZXRFbXB0eSByZXNcclxuXHRyZXNbZW1wdHlbaV1dID0gcGllY2VzW2ldIGZvciBpIGluIF8ucmFuZ2UgcGllY2VzLmxlbmd0aFxyXG5cdHJlcy5qb2luICcnXHJcbmFzc2VydCAgICAnUk5LTlInLCBmaWxsSW4gTiwgWzEsM10sICdSS1InXHJcbmFzc2VydCAgICdSTlFLTlInLCBmaWxsSW4gUSwgWzJdLCAgICdSTktOUidcclxuYXNzZXJ0ICdSTkJRS0JOUicsIGZpbGxJbiBCLCBbMiw1XSwgJ1JOUUtOUidcclxuXHJcbmV4cG9ydCBjaGVzczk2MCA9IChpKSAtPiAjIDE2IG1pY3Jvc2Vjc1xyXG5cdHEgID0gaSAvLyAxNiAlIDZcclxuXHRuMCA9IE4wW2kgLy8gOTYgJSAxMF1cclxuXHRuMSA9IE4xW2kgLy8gOTYgJSAxMF1cclxuXHRiMCA9IEIwW2kgLy8gNCAlIDRdXHJcblx0YjEgPSBCMVtpICUgNF1cclxuXHRmaXZlICA9IGZpbGxJbiBOLFtuMCxuMV0sJ1JLUidcclxuXHRzaXggICA9IGZpbGxJbiBRLFtxXSxmaXZlXHJcblx0ZmlsbEluIEIsW2IwLGIxXSxzaXhcclxuYXNzZXJ0IFwiUk5CUUtCTlJcIiwgY2hlc3M5NjAgNTE4XHJcbiJdfQ==
//# sourceURL=c:\github\2022-007-StateLab\coffee\chess960.coffee